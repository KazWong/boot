<launch>
  <arg name="ns" default=""/>
  <arg name="sim" default="false"/>
  <arg name="tf" default="false"/>
  <arg name="ur5" default="false"/>
  <arg name="agv" default="false"/>
  <arg name="amcl" default="false"/>
  <arg name="lidar" default="false"/>
  <arg name="rosbag" default="true"/>

  <arg name="initial_pose_x" default="0.0"/>
  <arg name="initial_pose_y" default="0.0"/>
  <arg name="initial_pose_a" default="0.0"/>
  <arg name="map_file" default=""/>
  <arg name="ur_ip" default="0.0.0.0"/>
  <arg name="sick_ip" default="0.0.0.0" />
  <arg name="keyboard" default="false"/>
  <arg name="joystick" default="false"/>
  <arg name="joy_dev" default="/dev/input/js0" />
  <arg name="joystick_autorepeat_rate" default="20"/>
  <arg name="joint_pub" default="false"/>
  
  <arg name="sweep" default="false" />
  <arg name="sweep_port" default="/dev/ttyUSB0"/>
  
  <arg name="rotation_speed" default="5"/>
  <arg name="sample_rate" default="1000"/>
  
  <arg name="angle_min" default="-3.14"/>
  <arg name="angle_max" default="3.14"/>
  <arg name="range_min" default="0.0"/>
  <arg name="range_max" default="40.0"/>
  
  <arg name="duration" default="10m"/>
  <arg name="split" default="12"/>
  <arg name="log_path" default="/tmp/log"/>

  <!-- <group ns="$(arg ns)"> -->
    <!-- Robot TF -->
    <include if="$(arg tf)" file="$(find boot)/launch/tf.launch">
      <arg name="sim" value="$(arg sim)"/>
      <arg name="ns" value="$(arg ns)"/>
      <arg name="joint_pub" value="$(arg joint_pub)"/>
    </include>

    <!-- ur5 -->
    <include if="$(arg ur5)" file="$(find boot)/launch/ur5.launch">
      <arg name="sim" value="$(arg sim)"/>
      <arg name="ur_ip" value="$(arg ur_ip)"/>
      <arg name="joint_pub" value="$(arg joint_pub)"/>
    </include>
    
    <!-- agv -->
    <include if="$(arg agv)" file="$(find boot)/launch/agv.launch">
      <arg name="sim" value="$(arg sim)"/>
      <arg name="keyboard" value="$(arg keyboard)"/>
      <arg name="joystick" value="$(arg joystick)"/>
      <arg name="joy_dev" default="$(arg joy_dev)" />
      <arg name="autorepeat_rate" value="$(arg joystick_autorepeat_rate)"/>
    </include>
    
    <!-- Lidar -->
    <include file="$(find boot)/launch/lidar.launch">
      <arg name="sick_ip" value="$(arg sick_ip)"/>
      <arg name="sweep_port" value="$(arg sweep_port)"/>
      <arg name="sweep" value="$(arg sweep)" />
    
      <arg name="rotation_speed" value="$(arg rotation_speed)"/>
      <arg name="sample_rate" value="$(arg sample_rate)"/>
  
      <arg name="angle_min" value="$(arg angle_min)"/>
      <arg name="angle_max" value="$(arg angle_max)"/>
      <arg name="range_min" value="$(arg range_min)"/>
      <arg name="range_max" value="$(arg range_max)"/>
    </include>

    <!-- Navigation -->
    <include if="$(arg amcl)" file="$(find boot)/launch/amcl.launch">
      <arg name="initial_pose_x" value="$(arg initial_pose_x)"/>
      <arg name="initial_pose_y" value="$(arg initial_pose_y)"/>
      <arg name="initial_pose_a" value="$(arg initial_pose_a)"/>
      <arg name="map_file" value="$(arg map_file)"/>
    </include>
    
    <!-- rosbag -->
    <node if="$(arg rosbag)" pkg="rosbag" type="record" name="log"
        args="record --split --duration=$(arg duration) --max-splits $(arg split) -o $(arg log_path) 
        /tf
        /tf_static 
        /scan
        /amcl/parameter_descriptions
        /amcl/parameter_updates
        /amcl_pose
        /cmd_pos
        /cmd_vel
        /encoder
        /feedback_wheelspd
        /initialpose
        /joint_states
        /map
        /map_metadata
        /mobile_base/sensors/bumper_pointcloud
        /move_base/EBandPlannerROS/eband_visualization
        /move_base/EBandPlannerROS/eband_visualization_array
        /move_base/EBandPlannerROS/global_plan
        /move_base/EBandPlannerROS/local_plan
        /move_base/EBandPlannerROS/parameter_descriptions
        /move_base/EBandPlannerROS/parameter_updates
        /move_base/NavfnROS/plan
        /move_base/cancel
        /move_base/current_goal
        /move_base/feedback
        /move_base/global_costmap/costmap
        /move_base/global_costmap/costmap_updates
        /move_base/global_costmap/footprint
        /move_base/global_costmap/inflation_layer/parameter_descriptions
        /move_base/global_costmap/inflation_layer/parameter_updates
        /move_base/global_costmap/obstacle_layer/parameter_descriptions
        /move_base/global_costmap/obstacle_layer/parameter_updates
        /move_base/global_costmap/parameter_descriptions
        /move_base/global_costmap/parameter_updates
        /move_base/global_costmap/static_layer/parameter_descriptions
        /move_base/global_costmap/static_layer/parameter_updates
        /move_base/goal
        /move_base/local_costmap/costmap
        /move_base/local_costmap/costmap_updates
        /move_base/local_costmap/footprint
        /move_base/local_costmap/inflation_layer/parameter_descriptions
        /move_base/local_costmap/inflation_layer/parameter_updates
        /move_base/local_costmap/obstacle_layer/parameter_descriptions
        /move_base/local_costmap/obstacle_layer/parameter_updates
        /move_base/local_costmap/parameter_descriptions
        /move_base/local_costmap/parameter_updates
        /move_base/parameter_descriptions
        /move_base/parameter_updates
        /move_base/result
        /move_base/status
        /move_base_simple/goal
        /odom
        /particlecloud
        /pc2
        /record" />
  <!-- </group> -->
</launch>
